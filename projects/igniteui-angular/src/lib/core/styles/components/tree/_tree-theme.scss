////
/// @group themes
/// @access public
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// Returns a map containing all style properties related to the theming the tree component.
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
///
/// @param {Color} background [null] - The background color used for the tree node.
/// @param {Color} background-hover [null] - The background color on hover used for the tree node.
/// @param {Color} background-selected [null] - The background color in selected state used for the tree node.
/// @param {Color} background-selected-hover [null] - The background color on hover in selected state used for the tree node.
/// @param {Color} background-active [null] - The background color in active state used for the tree node.
/// @param {Color} background-disabled [null] - The background color in disabled state used for the tree node.
///
/// @param {Color} color [null] - The color used for the tree node content.
/// @param {Color} color-hover [null] - The hover color used for the tree node content.
/// @param {Color} color-selected [null] - The color used for the content of the selected tree node.
/// @param {Color} color-selected-hover [null] - The hover color used for the content of the selected tree node.
/// @param {Color} color-active [null] - The color used for the content of the active tree node.
/// @param {Color} color-disabled [null] - The color used for the content of the disabled tree node.
///
/// @param {Color} tree-indicator-color [null] - The color used for the tree node expand/collapse indicator.
/// @param {Color} tree-indicator-color-hover [null] - The hover color used for the tree node expand/collapse indicator.
/// @param {Color} tree-indicator-color-selected [null] - The color used for the selected tree node expand/collapse indicator.
/// @param {Color} tree-indicator-color-selected-hover [null] - The hover color used for the selected tree node expand/collapse indicator.
/// @param {Color} tree-indicator-color-active [null] - The color used for the active tree node expand/collapse indicator.
/// @param {Color} tree-indicator-color-disabled [null] - The color used for the disabled tree node expand/collapse indicator.
///
/// @param {Color} drop-indicator-color [null] - The color used for the drop aria indicator.
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
/// @requires text-contrast
///
/// @example scss Change the tree background
///   $my-tree-theme: igx-tree-theme($background: magenta);
///   // Pass the theme to the igx-tree component mixin
///   @include igx-tree($my-tree-theme);
@function igx-tree-theme(
    $palette: $default-palette,
    $schema: $light-schema,

    $background: null,
    $background-hover: null,
    $background-focused: null,
    $background-selected: null,
    $background-selected-hover: null,
    $background-selected-focused: null,
    $background-active: null,
    $background-active-hover: null,
    $background-active-focused: null,
    $background-active-selected: null,
    $background-disabled: null,

    $color: null,
    $color-hover: null,
    $color-focused: null,
    $color-selected: null,
    $color-selected-hover: null,
    $color-selected-focused: null,
    $color-active: null,
    $color-active-hover: null,
    $color-active-focused: null,
    $color-active-selected: null,
    $color-disabled: null,

    $drop-indicator-color: null,

    $tree-indicator-color: null,
    $tree-indicator-color-hover: null,
    $tree-indicator-color-focused: null,
    $tree-indicator-color-selected-focused: null,
    $tree-indicator-color-selected: null,
    $tree-indicator-color-selected-hover: null,

    $tree-indicator-color-active: null,
    $tree-indicator-color-disabled: null,

    $border-focused: null
) {
    $name: 'igx-tree';
    $tree-schema: ();

    @if map-has-key($schema, $name) {
        $tree-schema: map-get($schema, $name);
    } @else {
        $tree-schema: $schema;
    }

    $theme: apply-palette($tree-schema, $palette);

    @if not($color) and $background {
        $color: text-contrast($background);
    }

    @if not($color-hover) and $background-hover {
        $color-hover: text-contrast($background-hover);
    }

    @if not($color-selected) and $background-selected {
        $color-selected: text-contrast($background-selected);
    }

    @if not($tree-indicator-color) and $background {
        $tree-indicator-color: text-contrast($background);
    }

    @if not($tree-indicator-color) and $background-hover {
        $tree-indicator-color: text-contrast($background-hover);
    }

    @if not($tree-indicator-color-selected) and $background-selected {
        $tree-indicator-color-selected: text-contrast($background-selected);
    }

    @if not($color-active) and $background-active {
        $color-active: text-contrast($background-active);
    }

    @if not($tree-indicator-color-active) and $background-active {
        $tree-indicator-color-active: text-contrast($background-active);
    }

    @return extend($theme, (
        name: $name,
        palette: $default-palette,

        background: $background,
        background-hover: $background-hover,
        background-focused: $background-focused,
        background-selected: $background-selected,
        background-selected-hover: $background-selected-hover,
        background-selected-focused: $background-selected-focused,
        background-active: $background-active,
        background-active-hover: $background-active-hover,
        background-active-focused: $background-active-focused,
        background-active-selected: $background-active-selected,
        background-disabled: $background-disabled,

        color: $color,
        color-hover: $color-hover,
        color-focused: $color-focused,
        color-selected: $color-selected,
        color-selected-hover: $color-selected-hover,
        color-selected-focused: $color-selected-focused,
        color-active: $color-active,
        color-active-hover: $color-active-hover,
        color-active-focused: $color-active-focused,
        color-active-selected: $color-active-selected,
        color-disabled: $color-disabled,

        drop-indicator-color: $drop-indicator-color,

        tree-indicator-color: $tree-indicator-color,
        tree-indicator-color-hover: $tree-indicator-color-hover,
        tree-indicator-color-focused: $tree-indicator-color-focused,
        tree-indicator-color-selected-focused: $tree-indicator-color-selected-focused,
        tree-indicator-color-selected: $tree-indicator-color-selected,
        tree-indicator-color-selected-hover: $tree-indicator-color-selected-hover,
        tree-indicator-color-active: $tree-indicator-color-disabled,
        tree-indicator-color-disabled: $tree-indicator-color-disabled,

        border-focused: $border-focused
    ));
}

/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} igx-root-css-vars
/// @requires --var
@mixin igx-tree($theme) {
    @include igx-root-css-vars($theme);

    $left: if-ltr(left, right);
    $right: if-ltr(right, left);

    $node-indent: (
        comfortable: rem(24px),
        cosy: rem(16px),
        compact: rem(12px)
    );

    $node-height: (
        comfortable: rem(50px),
        cosy: rem(40px),
        compact: rem(32px)
    );

    $icon-size: rem(24px);
    $icon-space: rem(8px);

    %tree-display {
        display: block;
    }

    %tree-node,
    %tree-node-wrapper,
    %tree-node-indicator,
    %tree-node-content,
    %tree-node-select {
        display: flex;
    }

    %tree-node {
        flex-direction: column;
    }

    %tree-display,
    %tree-node-root,
    %tree-node,
    %tree-node-wrapper {
        &:focus {
            outline-width: 0;
        }
    }

    %tree-node-wrapper,
    %tree-node-indicator,
    %tree-node-select {
        align-items: center;
    }

    %tree-node-indicator,
    %tree-node-select {
        margin-#{$right}: $icon-space;
    }

    %tree-node-indicator--hidden {
        visibility: hidden;
    }

    %tree-node-wrapper {
        min-height: map-get($node-height, 'comfortable');
        padding: 0 map-get($node-indent, 'comfortable');
        background: --var($theme, 'background');
        color: --var($theme, 'color');
        position: relative;

        // We need this here, since we count on it to calculate the width of the tree drop indicator
        igx-icon {
            width: $icon-size;
            height: $icon-size;
            font-size: $icon-size;
        }

        &:hover {
            color: --var($theme, 'color-hover');
            background: --var($theme, 'background-hover');
        }

        &:focus {
            outline-color: transparent;
        }

        &--cosy {
            min-height: map-get($node-height, 'cosy');
            padding: 0 map-get($node-indent, 'cosy');

            %tree-node-spacer {
                width: map-get($node-indent, 'cosy')
            }

            %tree-node-drop-indicator {
                #{$right}: map-get($node-indent, 'cosy');
                width: calc(100% - ((#{map-get($node-indent, 'cosy')} * 2) + (#{$icon-size} + #{$icon-space})));
            }
        }

        &--compact {
            min-height: map-get($node-height, 'compact');
            padding: 0 map-get($node-indent, 'compact');

            %tree-node-spacer {
                width: map-get($node-indent, 'compact')
            }

            %tree-node-drop-indicator {
                #{$right}: map-get($node-indent, 'compact');
                width: calc(100% - ((#{map-get($node-indent, 'compact')} * 2) + (#{$icon-size} + #{$icon-space})));
            }
        }
    }

    %tree-node-wrapper--selected {
        background: --var($theme, 'background-selected');
        color: --var($theme, 'color-selected');
    }

    %tree-node-wrapper--active-selected {
        background: --var($theme, 'background-active-selected');
        color: --var($theme, 'color-active-selected');
    }

    %tree-node-wrapper--selected,
    %tree-node-wrapper--active-selected {
        %tree-node-indicator {
            color: --var($theme, 'tree-indicator-color-selected');

            &:hover {
                color: --var($theme, 'tree-indicator-color-selected-hover');
            }
        }

        &:hover {
            background: --var($theme, 'background-selected-hover');
            color: --var($theme, 'color-selected-hover');
        }
    }

    %tree-node-wrapper--active {
        background: --var($theme, 'background-active');
        color: --var($theme, 'color-active');

        %tree-node-indicator {
            color: --var($theme, 'tree-indicator-color-active');
        }

        &:hover {
            background: --var($theme, 'background-active-hover');
            color: --var($theme, 'color-active-hover');
        }
    }

    %tree-node-wrapper--focused {
        background: --var($theme, 'background-focused');
        color: --var($theme, 'color-focused');

        box-shadow: inset 0 0 0 1px --var($theme, 'border-focused');

        &:hover {
            background: --var($theme, 'background-active-hover');
            color: --var($theme, 'color-active-hover');
        }

        %tree-node-indicator {
            color: --var($theme, 'tree-indicator-color-focused');
        }
    }

    %tree-node-wrapper--selected-focused {
        background: --var($theme, 'background-selected-focused');
        color: --var($theme, 'color-selected-focused');

        %tree-node-indicator {
            color: --var($theme, 'tree-indicator-color-selected-focused');
        }
    }

    %tree-node-wrapper--selected%tree-node-wrapper--disabled,
    %tree-node-wrapper--active-selected%tree-node-wrapper--disabled,
    %tree-node-wrapper--disabled {
        background: --var($theme, 'background-disabled');
        color: --var($theme, 'color-disabled');

        %tree-node-indicator {
            color: --var($theme, 'tree-indicator-color-disabled');

            &:hover {
                color: --var($theme, 'tree-indicator-color-disabled');
            }
        }

        &:hover {
            background: --var($theme, 'background-disabled');
            color: --var($theme, 'color-disabled');
        }
    }

    %tree-node-spacer {
        display: inline-block;
        width: map-get($node-indent, 'comfortable');
    }

    %tree-node-content {
        display: block;
        align-items: center;
        flex: 1;
        @include ellipsis();
    }

    %tree-node-indicator {
        justify-content: center;
        cursor: pointer;

        color: --var($theme, 'tree-indicator-color');

        &:hover {
            color: --var($theme, 'tree-indicator-color-hover');
        }
    }

    %tree-node-drop-indicator {
        display: flex;
        visibility: hidden;
        position: absolute;
        #{$right}: map-get($node-indent, 'comfortable');
        bottom: 0;
        width: calc(100% - ((#{map-get($node-indent, 'comfortable')} * 2) + (#{$icon-size} + #{$icon-space})));

        > div {
            flex: 1;
            height: rem(1px);
            background: --var($theme, 'drop-indicator-color');
        }
    }

    %tree-node-group {
        overflow: hidden;
    }
}

/// Adds typography styles for the igx-tree component.
/// Uses the 'subtitle-1' category from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} igx-type-style
@mixin igx-switch-typography(
    $type-scale,
    $categories: (label: 'body-2')
) {
    $text: map-get($categories, 'label');

    %tree-node-content {
        @include igx-type-style($type-scale, $text)
    }
}


